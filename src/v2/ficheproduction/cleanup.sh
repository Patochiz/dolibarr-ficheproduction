#!/bin/bash

# üßπ Script de nettoyage automatique des fichiers obsol√®tes
# Version: 1.0 - Date: 2025-05-25

echo "üßπ Nettoyage du module FicheProduction v2.0"
echo "============================================="

# R√©pertoire de base du module
BASE_DIR="$(dirname "$0")"
cd "$BASE_DIR"

echo "üìç R√©pertoire de travail: $(pwd)"

# Fichiers √† supprimer
FILES_TO_DELETE=(
    # Fichiers de debug
    "debug-modules.html"
    "debug-test.php"
    
    # Versions de test du fichier principal
    "ficheproduction-final.php"
    "ficheproduction-new.php"
    "ficheproduction-test-fixed.php"
    "ficheproduction-test.php"
    
    # Fichiers de test HTML
    "test-modules-fixed.html"
    "test-modules-standalone.html"
    "test-modules.html"
    
    # Scripts de test
    "test-ficheproduction.sh"
    "validate-fix.sh"
    
    # READMEs temporaires
    "README_CORRECTION_MODULES.md"
    "README_TESTS.md"
    "RESTRUCTURATION_README.md"
    "R√âSUM√â_CORRECTION.md"
)

# JavaScript files √† nettoyer (versions en double)
JS_FILES_TO_DELETE=(
    "js/ficheproduction-colis-fixed.js"
    "js/ficheproduction-core-fixed.js"
    "js/ficheproduction-dragdrop-fixed.js"
    "js/ficheproduction-inventory-fixed.js"
    "js/ficheproduction-ui-fixed.js"
    # Garder seulement les versions sans "-fixed" et ficheproduction.js principal
)

echo "üóëÔ∏è  Suppression des fichiers obsol√®tes..."

# Compter les fichiers supprim√©s
DELETED_COUNT=0

# Supprimer les fichiers principaux
for file in "${FILES_TO_DELETE[@]}"; do
    if [ -f "$file" ]; then
        echo "   ‚ùå Suppression: $file"
        rm "$file"
        ((DELETED_COUNT++))
    else
        echo "   ‚ÑπÔ∏è  D√©j√† absent: $file"
    fi
done

# Supprimer les fichiers JavaScript en double
for file in "${JS_FILES_TO_DELETE[@]}"; do
    if [ -f "$file" ]; then
        echo "   ‚ùå Suppression: $file"
        rm "$file"
        ((DELETED_COUNT++))
    else
        echo "   ‚ÑπÔ∏è  D√©j√† absent: $file"
    fi
done

echo ""
echo "‚úÖ Nettoyage termin√©!"
echo "üìä R√©sum√©:"
echo "   - Fichiers supprim√©s: $DELETED_COUNT"
echo ""

# V√©rifier les fichiers restants importants
echo "üìã Fichiers principaux conserv√©s:"
if [ -f "ficheproduction.php" ]; then
    echo "   ‚úÖ ficheproduction.php (fichier principal)"
else
    echo "   ‚ùå ATTENTION: ficheproduction.php manquant!"
fi

if [ -f "js/ficheproduction.js" ]; then
    echo "   ‚úÖ js/ficheproduction.js (JavaScript principal)"
else
    echo "   ‚ùå ATTENTION: js/ficheproduction.js manquant!"
fi

if [ -f "css/ficheproduction.css" ]; then
    echo "   ‚úÖ css/ficheproduction.css (CSS principal)"
else
    echo "   ‚ùå ATTENTION: css/ficheproduction.css manquant!"
fi

# V√©rifier les classes
echo ""
echo "üìÅ Classes PHP:"
CLASSES_DIR="class"
if [ -d "$CLASSES_DIR" ]; then
    CLASS_COUNT=$(find "$CLASSES_DIR" -name "*.class.php" | wc -l)
    echo "   ‚úÖ $CLASS_COUNT classes trouv√©es dans le r√©pertoire class/"
    find "$CLASSES_DIR" -name "*.class.php" | sed 's/^/      /'
else
    echo "   ‚ùå ATTENTION: R√©pertoire class/ manquant!"
fi

echo ""
echo "üéØ Instructions post-nettoyage:"
echo "1. V√©rifiez que l'interface fonctionne correctement"
echo "2. Testez l'affichage des produits (probl√®me r√©solu avec inclusion JS)"
echo "3. Testez la sauvegarde (am√©lior√©e avec validation renforc√©e)"
echo "4. Supprimez ce script de nettoyage une fois satisfait"

echo ""
echo "üìö Documentation:"
echo "   - Voir CORRECTIONS_APPLIQUEES.md pour le d√©tail des corrections"
echo "   - Voir README.md pour la documentation g√©n√©rale"

echo ""
echo "üèÅ Nettoyage termin√© avec succ√®s!"
